from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.filters.state import StatesGroup, State

import logging
import os

from aiogram import Router, Bot
from aiogram.types import Message, CallbackQuery, FSInputFile, InputMediaPhoto
from aiogram.filters import Command
from aiogram import F
from asgiref.sync import sync_to_async
from environs import Env

from conf.settings import BASE_DIR
from shopbot.models import Client, Advertisement, Staff, Bouquet, FlowerComposition, GreeneryComposition
from shopbot.management.commands.bot.user_keyboards import (
    get_catalog_keyboard,
    get_occasions_keyboard,
    get_price_ranges_keyboard,
)


logging.basicConfig(
    level=logging.INFO,
    format='%(filename)s:%(lineno)d - %(levelname)-8s - %(asctime)s - %(funcName)s - %(name)s - %(message)s'
    )

logger = logging.getLogger(__name__)


env: Env = Env()
env.read_env()

bot: Bot = Bot(token=env('TG_BOT_API'), parse_mode='HTML')


router = Router()


class Order(StatesGroup):
    user_occasion = State()


@router.message(Command(commands=["start"]))
async def start_command_handler(message: Message):
    await message.answer('–ö –∫–∞–∫–æ–º—É —Å–æ–±—ã—Ç–∏—é –≥–æ—Ç–æ–≤–∏–º—Å—è? –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ª–∏–±–æ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π',
                         reply_markup=await get_occasions_keyboard())


@router.callback_query(F.data.startswith == 'occasion_')
async def get_occasion_handler(callback: CallbackQuery, state: FSMContext):
    logger.info(f'start occasion handler - {callback.data}')
    occasion = callback.data.split('_')[-1]
    if occasion == '10':
        await state.set_state(Order.user_occasion)
        await callback.message.answer('–í –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –ø–æ–≤–æ–¥ –¥–ª—è –∑–∞–∫–∞–∑–∞ –±—É–∫–µ—Ç–∞',
                                      reply_markup=ReplyKeyboardRemove()
                                      )
    else:
        async with state.proxy() as data:
            data['occasion'] = occasion
            data['user_occasion'] = None
        await callback.message.answer('–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç–µ?',
                                      reply_markup=await get_price_ranges_keyboard())


@router.message(Order.user_occasion)
async def get_user_occasion_handler(message: Message, state: FSMContext):
    async with state.proxy() as data:
        data['occasion'] = '10'
        data['user_occasion'] = message.text
    await message.answer('–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç–µ?',
                      reply_markup=await get_price_ranges_keyboard())



@router.callback_query(F.data.startswith == 'price_')
async def get_price_range_handler(callback: CallbackQuery):
    await callback.message.answer('–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç–µ?',
                                  reply_markup=await give_buttons_with_prices())


@router.message(Command(commands=['catalog']))
async def show_start_catalog_handler(message: Message):
    bouquet = await sync_to_async(Bouquet.objects.all().first)()
    image_path = os.path.join(BASE_DIR, bouquet.image.url.lstrip('/'))
    logger.info(f'picture path {image_path}')
    photo = FSInputFile(image_path)
    await bot.send_photo(
        chat_id=message.from_user.id,
        caption=f'{bouquet.name.upper()}\n\n'
        f'<b>üí° –°–º—ã—Å–ª –±—É–∫–µ—Ç–∞</b>:\n\n{bouquet.meaning}\n\n'
        f'<b>üí∞ {bouquet.price} —Ä—É–±.</b>',
        photo=photo,
        reply_markup=await get_catalog_keyboard(bouquet.id)
    )


@router.callback_query(F.data.startswith('catalog_'))
async def show_more_catalog_handler(callback: CallbackQuery):
    bouquet_id = callback.data.split('_')[-1]
    logger.info(f'bouquet_id {bouquet_id}')
    bouquet = await sync_to_async(Bouquet.objects.filter(pk=bouquet_id).first)()
    image_path = os.path.join(BASE_DIR, bouquet.image.url.lstrip('/'))
    logger.info(f'picture path {image_path}')
    photo = FSInputFile(image_path)
    await bot.edit_message_media(chat_id=callback.from_user.id,
                                 message_id=callback.message.message_id,
                                 media=InputMediaPhoto(media=photo,
                                                       caption=f'{bouquet.name.upper()}\n\n'
                                                               f'<b>üí° –°–º—ã—Å–ª –±—É–∫–µ—Ç–∞</b>:\n\n{bouquet.meaning}\n\n'
                                                               f'<b>üí∞ {bouquet.price} —Ä—É–±.</b>'),
                                 reply_markup=await get_catalog_keyboard(bouquet.id))


@router.callback_query(F.data.startswith('show_composition_'))
async def show_composition_handler(callback: CallbackQuery):
    bouquet_id = callback.data.split('_')[-1]
    bouquet = await sync_to_async(Bouquet.objects.filter(pk=bouquet_id)
                                  .first)()
    composition_flowers = await sync_to_async(FlowerComposition.objects.select_related('flower')
                                              .filter)(bouquet=bouquet)
    flowers = []
    async for composition_flower in composition_flowers:
        flowers.append(f'{composition_flower.flower.name} - {composition_flower.quantity} —à—Ç.\n')
    flowers = ''.join(flowers)
    composition_greeneries = await sync_to_async(GreeneryComposition.objects.select_related('greenery')
                                                 .filter)(bouquet=bouquet)
    greeneries = []
    async for composition_greenery in composition_greeneries:
        greeneries.append(f'{composition_greenery.greenery.name} - {composition_greenery.quantity} —à—Ç./—É–ø–∞–∫.\n')
    greeneries = ''.join(greeneries)
    image_path = os.path.join(BASE_DIR, bouquet.image.url.lstrip('/'))
    logger.info(f'picture path {image_path}')
    photo = FSInputFile(image_path)
    await bot.edit_message_media(chat_id=callback.from_user.id,
                                 message_id=callback.message.message_id,
                                 media=InputMediaPhoto(media=photo,
                                                       caption=f'{bouquet.name.upper()}\n\n'
                                                               f'<b>üåπ –°–æ—Å—Ç–∞–≤ –±—É–∫–µ—Ç–∞</b>:\n\n'
                                                               f'{flowers}\n{greeneries}\n'
                                                               f'–£–ø–∞–∫–æ–≤–∫–∞ - {bouquet.wrapping}\n\n'
                                                               f'<b>üí∞ {bouquet.price} —Ä—É–±.</b>'),
                                 reply_markup=await get_catalog_keyboard(bouquet.id)
                                 )


